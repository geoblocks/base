#!/usr/bin/env python3

import argparse
import json
import os
import re
import subprocess

parser = argparse.ArgumentParser(description='Publis the package on npmjs.')
parser.add_argument('--dry-run', action='store_true', help='Dry run mode')
parser.add_argument('--force', action='store_true', help='Force to create the ~/.npmrc file')
args = parser.parse_args()

def call(cmd):
    if args.dry_run:
        print(' '.join(cmd))
    else:
        subprocess.check_call(cmd)


with open('package.json') as package_json:
    PACKAGE_VERSION = json.loads(package_json.read())['version']

if 'TRAVIS_TAG' in os.environ:
    TRAVIS_TAG = os.environ['TRAVIS_TAG']
    print('Trying to publish tag {} from package {}'.format(TRAVIS_TAG, PACKAGE_VERSION))

    cmd = ['npm', 'publish', '--access=public']
    if re.match('^[0-9]+\.[0-9]+\.[0-9]+-[a-z]+\.[0-9]+$', TRAVIS_TAG):
        print('This is a dev version')
        cmd.append('--tab=' + re.split('[.-]', TRAVIS_TAG)[3])
    else:
        if re.match('^[0-9]+\.[0-9]+\.[0-9]+$', TRAVIS_TAG):
            print('This is a regular version')
        else:
            print('This is not a regular version')

    if PACKAGE_VERSION == TRAVIS_TAG:
        npmrc = os.path.expanduser('~/.npmrc')
        if args.force or not os.path.exists(npmrc):
            with open(npmrc, 'w') as npmrc_file:
                npmrc_file.write("""
_auth = {}
email = stephane.brunner@camptocamp.com
""".format(os.environ[NPM_AUTH]))
        call(cmd)
    else:
        print('Skipping publication, the Travis tag and package version differ')
